	KEYWORD class
	IDENTIFIER Square
	SYMBOL {
	KEYWORD field
	KEYWORD int
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ;
	KEYWORD field
	KEYWORD int
	IDENTIFIER size
	SYMBOL ;
	KEYWORD constructor
	IDENTIFIER Square
	IDENTIFIER new
	SYMBOL (
	KEYWORD int
	IDENTIFIER Ax
	SYMBOL ,
	KEYWORD int
	IDENTIFIER Ay
	SYMBOL ,
	KEYWORD int
	IDENTIFIER Asize
	SYMBOL )
	SYMBOL {
	KEYWORD let
	IDENTIFIER x
	SYMBOL =
	IDENTIFIER Ax
	SYMBOL ;
	KEYWORD let
	IDENTIFIER y
	SYMBOL =
	IDENTIFIER Ay
	SYMBOL ;
	KEYWORD let
	IDENTIFIER size
	SYMBOL =
	IDENTIFIER Asize
	SYMBOL ;
	KEYWORD do
	IDENTIFIER draw
	SYMBOL (
	SYMBOL )
	SYMBOL ;
	KEYWORD return
	KEYWORD this
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER dispose
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Memory
	SYMBOL .
	IDENTIFIER deAlloc
	SYMBOL (
	KEYWORD this
	SYMBOL )
	SYMBOL ;
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER draw
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD true
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER erase
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD false
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER incSize
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	SYMBOL (
	SYMBOL (
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL &lt;
	INT_CONST 254
	SYMBOL )
	SYMBOL &amp;
	SYMBOL (
	SYMBOL (
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL &lt;
	INT_CONST 510
	SYMBOL )
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER erase
	SYMBOL (
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER size
	SYMBOL =
	IDENTIFIER size
	SYMBOL +
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER draw
	SYMBOL (
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER decSize
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	IDENTIFIER size
	SYMBOL &gt;
	INT_CONST 2
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER erase
	SYMBOL (
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER size
	SYMBOL =
	IDENTIFIER size
	SYMBOL -
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER draw
	SYMBOL (
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER moveUp
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	IDENTIFIER y
	SYMBOL &gt;
	INT_CONST 1
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD false
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	SYMBOL (
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL -
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER y
	SYMBOL =
	IDENTIFIER y
	SYMBOL -
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD true
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	INT_CONST 1
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER moveDown
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	SYMBOL (
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL &lt;
	INT_CONST 254
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD false
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	INT_CONST 1
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER y
	SYMBOL =
	IDENTIFIER y
	SYMBOL +
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD true
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	SYMBOL (
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL -
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER moveLeft
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	IDENTIFIER x
	SYMBOL &gt;
	INT_CONST 1
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD false
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	SYMBOL (
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL -
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER x
	SYMBOL =
	IDENTIFIER x
	SYMBOL -
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD true
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	KEYWORD method
	KEYWORD void
	IDENTIFIER moveRight
	SYMBOL (
	SYMBOL )
	SYMBOL {
	KEYWORD if
	SYMBOL (
	SYMBOL (
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL &lt;
	INT_CONST 510
	SYMBOL )
	SYMBOL {
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD false
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	IDENTIFIER x
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	KEYWORD let
	IDENTIFIER x
	SYMBOL =
	IDENTIFIER x
	SYMBOL +
	INT_CONST 2
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER setColor
	SYMBOL (
	KEYWORD true
	SYMBOL )
	SYMBOL ;
	KEYWORD do
	IDENTIFIER Screen
	SYMBOL .
	IDENTIFIER drawRectangle
	SYMBOL (
	SYMBOL (
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL -
	INT_CONST 1
	SYMBOL ,
	IDENTIFIER y
	SYMBOL ,
	IDENTIFIER x
	SYMBOL +
	IDENTIFIER size
	SYMBOL ,
	IDENTIFIER y
	SYMBOL +
	IDENTIFIER size
	SYMBOL )
	SYMBOL ;
	SYMBOL }
	KEYWORD return
	SYMBOL ;
	SYMBOL }
	SYMBOL }
