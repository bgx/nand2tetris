<tokens>
	<keyword> class </keyword>
	<identifier> Hitbox </identifier>
	<symbol> { </symbol>
	<keyword> field </keyword>
	<keyword> int </keyword>
	<identifier> x_min </identifier>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> ; </symbol>
	<keyword> constructor </keyword>
	<identifier> Hitbox </identifier>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> Ax_min </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ax_max </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ay_min </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ay_max </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> let </keyword>
	<identifier> x_min </identifier>
	<symbol> = </symbol>
	<identifier> Ax_min </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> x_max </identifier>
	<symbol> = </symbol>
	<identifier> Ax_max </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_min </identifier>
	<symbol> = </symbol>
	<identifier> Ay_min </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_max </identifier>
	<symbol> = </symbol>
	<identifier> Ay_max </identifier>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<keyword> this </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> do </keyword>
	<identifier> Memory </identifier>
	<symbol> . </symbol>
	<identifier> deAlloc </identifier>
	<symbol> ( </symbol>
	<keyword> this </keyword>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> update </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> Ax_min </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ax_max </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ay_min </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Ay_max </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> let </keyword>
	<identifier> x_min </identifier>
	<symbol> = </symbol>
	<identifier> Ax_min </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> x_max </identifier>
	<symbol> = </symbol>
	<identifier> Ax_max </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_min </identifier>
	<symbol> = </symbol>
	<identifier> Ay_min </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_max </identifier>
	<symbol> = </symbol>
	<identifier> Ay_max </identifier>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> getXmin </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> return </keyword>
	<identifier> x_min </identifier>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> getXmax </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> return </keyword>
	<identifier> x_max </identifier>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> getYmin </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> return </keyword>
	<identifier> y_min </identifier>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> getYmax </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> return </keyword>
	<identifier> y_max </identifier>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>