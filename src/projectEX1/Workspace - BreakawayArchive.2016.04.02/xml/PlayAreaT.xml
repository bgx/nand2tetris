<tokens>
	<keyword> class </keyword>
	<identifier> PlayArea </identifier>
	<symbol> { </symbol>
	<keyword> field </keyword>
	<keyword> int </keyword>
	<identifier> width </identifier>
	<symbol> , </symbol>
	<identifier> height </identifier>
	<symbol> ; </symbol>
	<keyword> field </keyword>
	<keyword> int </keyword>
	<identifier> x_min </identifier>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> ; </symbol>
	<keyword> field </keyword>
	<identifier> Hitbox </identifier>
	<identifier> hitbox </identifier>
	<symbol> ; </symbol>
	<keyword> constructor </keyword>
	<identifier> PlayArea </identifier>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> Awidth </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> Aheight </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> let </keyword>
	<identifier> width </identifier>
	<symbol> = </symbol>
	<identifier> Awidth </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> height </identifier>
	<symbol> = </symbol>
	<identifier> Aheight </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> x_min </identifier>
	<symbol> = </symbol>
	<integerConstant> 255 </integerConstant>
	<symbol> - </symbol>
	<symbol> ( </symbol>
	<identifier> width </identifier>
	<symbol> / </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> x_max </identifier>
	<symbol> = </symbol>
	<integerConstant> 256 </integerConstant>
	<symbol> + </symbol>
	<symbol> ( </symbol>
	<identifier> width </identifier>
	<symbol> / </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_min </identifier>
	<symbol> = </symbol>
	<integerConstant> 127 </integerConstant>
	<symbol> - </symbol>
	<symbol> ( </symbol>
	<identifier> height </identifier>
	<symbol> / </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> y_max </identifier>
	<symbol> = </symbol>
	<integerConstant> 128 </integerConstant>
	<symbol> + </symbol>
	<symbol> ( </symbol>
	<identifier> height </identifier>
	<symbol> / </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> hitbox </identifier>
	<symbol> = </symbol>
	<identifier> Hitbox </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<identifier> x_min </identifier>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> drawBorder </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<keyword> this </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> do </keyword>
	<identifier> hitbox </identifier>
	<symbol> . </symbol>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Memory </identifier>
	<symbol> . </symbol>
	<identifier> deAlloc </identifier>
	<symbol> ( </symbol>
	<keyword> this </keyword>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<identifier> Hitbox </identifier>
	<identifier> getHitbox </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> return </keyword>
	<identifier> hitbox </identifier>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> drawBorder </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> setColor </identifier>
	<symbol> ( </symbol>
	<keyword> true </keyword>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> drawRectangle </identifier>
	<symbol> ( </symbol>
	<identifier> x_min </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> setColor </identifier>
	<symbol> ( </symbol>
	<keyword> false </keyword>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> drawRectangle </identifier>
	<symbol> ( </symbol>
	<identifier> x_min </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> clear </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> setColor </identifier>
	<symbol> ( </symbol>
	<keyword> false </keyword>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Screen </identifier>
	<symbol> . </symbol>
	<identifier> drawRectangle </identifier>
	<symbol> ( </symbol>
	<identifier> x_min </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_min </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> x_max </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> , </symbol>
	<identifier> y_max </identifier>
	<symbol> - </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>