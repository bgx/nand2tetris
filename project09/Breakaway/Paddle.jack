// Brian Grady
// File name: src/project09/Breakaway/Paddle.jack

/**
 * Implements a graphic paddle. A graphic square has a screen location
 * and a size. It also has methods for drawing, erasing, moving on the 
 * screen, and changing its size.
 */
class Paddle {

    // Location on the screen
    field int x, y, x_sim, y_sim;

    // The size of the square
    field int width, height;
    
    // Hitbox
    field Hitbox hitbox;

    /** Constructs a new square with a given location and size. */
    constructor Paddle new(int Ax, int Ay, int Awidth, int Aheight) {
        let x = Ax;
        let y = Ay;
        let width = Awidth;
        let height = Aheight;
        
        let y_sim = y;

        do draw();
        
        let hitbox = Hitbox.new((4*(x + (width/2))),(4*(x - (width/2))), (4*(y + (height/2))), (4*(y - (height/2))));

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x - (width/2), y - (height/2), x + (width/2), y + (height/2));
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x - (width/2), y - (height/2), x + (width/2), y + (height/2));
        return;
    }
    
    method void moveLeftSim() {
        let x_sim = x - 4;
        do hitbox.update((4*(x_sim + (width/2))), (4*(x_sim - (width/2))), (4*(y_sim + (height/2))), (4*(y_sim - (height/2))));
        return;
    }
    
    method void moveRightSim() {
        let x_sim = x + 4;
        do hitbox.update((4*(x_sim + (width/2))), (4*(x_sim - (width/2))), (4*(y_sim + (height/2))), (4*(y_sim - (height/2))));
        return;
    }
    
    /** Returns a hitbox of the paddle */
    method Hitbox getHitbox() {
        return hitbox;
    }
    
    /** Moves left by 4 pixels. */
    method void moveLeft() {
        let x = x - 4;
        do hitbox.update((4*(x + (width/2))), (4*(x - (width/2))), (4*(y + (height/2))), (4*(y - (height/2))));

        return;
    }

    /** Moves right by 4 pixels. */
    method void moveRight() {
        let x = x + 4;
        do hitbox.update((4*(x + (width/2))), (4*(x - (width/2))), (4*(y + (height/2))), (4*(y - (height/2))));
        return;
    }
}
