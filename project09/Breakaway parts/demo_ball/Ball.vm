function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 4
call Math.divide 2
push this 1
push constant 4
call Math.divide 2
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 4
call Math.divide 2
push this 1
push constant 4
call Math.divide 2
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.moveBall 0
push argument 0
pop pointer 0
push this 0
push this 3
add
push constant 4
push this 2
call Math.multiply 2
sub
push constant 4
add
push constant 596
lt
push this 0
push this 3
add
push constant 4
push this 2
call Math.multiply 2
add
push constant 4
sub
push constant 1448
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
neg
pop this 3
label IF_FALSE0
push this 1
push this 4
add
push constant 4
push this 2
call Math.multiply 2
sub
push constant 4
add
push constant 12
lt
push this 1
push this 4
add
push constant 4
push this 2
call Math.multiply 2
add
push constant 4
sub
push constant 1008
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
neg
pop this 4
label IF_FALSE1
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push this 3
add
pop this 0
push this 1
push this 4
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
